name: Generate ChordPro PDFs (Optimized)

on:
  push:
    paths:
      - '**/*.chopro'
      - '**/*.cho'
      - 'music/ChordPro/myconfig.json'
    branches: [ main, master ]
  pull_request:
    paths:
      - '**/*.chopro'
      - '**/*.cho'
      - 'music/ChordPro/myconfig.json'
  workflow_dispatch:
    inputs:
      regenerate_all:
        description: 'Regenerate all PDFs (ignore timestamps)'
        required: false
        default: false
        type: boolean

env:
  FORCE_COLOR: 1

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit for comparison
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install ChordPro
      run: |
        sudo apt-get update
        sudo apt-get install -y cpanminus build-essential libpod-parser-perl
        sudo cpanm --notest App::Music::ChordPro
        
        # Verify installation
        echo "ChordPro version:"
        chordpro --version
    
    - name: Make script executable
      run: chmod +x .github/scripts/generate-pdfs.sh
    
    - name: Detect changes and generate PDFs
      id: generate
      run: |
        # Check if this is a manual trigger with regenerate_all option
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.regenerate_all }}" = "true" ]; then
          echo "🔄 Manual trigger - regenerating all PDFs"
          ./.github/scripts/generate-pdfs.sh music true
          echo "regenerated-all=true" >> $GITHUB_OUTPUT
        # Check if myconfig.json changed - if so, regenerate all PDFs
        elif git diff --name-only HEAD^ HEAD | grep -q "music/ChordPro/myconfig.json"; then
          echo "🔄 myconfig.json changed - regenerating all PDFs"
          ./.github/scripts/generate-pdfs.sh music true
          echo "regenerated-all=true" >> $GITHUB_OUTPUT
        # Check if this is a manual trigger without regenerate_all option
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "🔄 Manual trigger - processing all ChordPro files"
          ./.github/scripts/generate-pdfs.sh music false
          echo "regenerated-all=false" >> $GITHUB_OUTPUT
        else
          # Only process changed ChordPro files
          CHANGED_CHOPRO=$(git diff --name-only --diff-filter=AM HEAD^ HEAD | grep -E '\.(chopro|cho)$' || true)
          
          if [ -n "$CHANGED_CHOPRO" ]; then
            echo "📝 Changed ChordPro files:"
            echo "$CHANGED_CHOPRO"
            
            # Process only changed files
            echo "$CHANGED_CHOPRO" | while IFS= read -r file; do
              if [ -n "$file" ] && [ -f "$file" ]; then
                echo "Processing: $file"
                pdf_file="${file%.*}.pdf"
                mkdir -p "$(dirname "$pdf_file")"
                
                # Run ChordPro (ignore exit code, check if PDF was created)
                chordpro \
                  --config=music/ChordPro/myconfig.json \
                  --define=pdf:diagrams:show=top \
                  --define=settings:inline-chords=true \
                  --define=pdf:margintop=70 \
                  --define=pdf:marginbottom=0 \
                  --define=pdf:marginleft=20 \
                  --define=pdf:marginright=20 \
                  --define=pdf:headspace=50 \
                  --define=pdf:footspace=10 \
                  --define=pdf:head-first-only=true \
                  --define=pdf:fonts:chord:color=red \
                  --text-font=helvetica \
                  --chord-font=helvetica \
                  --output="$pdf_file" \
                  "$file" 2>/dev/null || true
                
                # Check if PDF was actually created (regardless of exit code)
                if [ -f "$pdf_file" ]; then
                  echo "✓ Generated: $pdf_file"
                else
                  echo "⚠ Failed to generate: $pdf_file (no output file)"
                fi
              fi
            done
            echo "regenerated-all=false" >> $GITHUB_OUTPUT
          else
            echo "ℹ No ChordPro files changed"
            echo "regenerated-all=false" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Check for generated PDFs
      id: check-pdfs
      run: |
        if git status --porcelain | grep -E '\.pdf$'; then
          echo "pdfs-generated=true" >> $GITHUB_OUTPUT
          echo "Generated PDFs:"
          git status --porcelain | grep -E '\.pdf$'
        else
          echo "pdfs-generated=false" >> $GITHUB_OUTPUT
          echo "No new PDFs generated"
        fi
    
    - name: Create PR comment (for pull requests)
      if: steps.check-pdfs.outputs.pdfs-generated == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          // Get list of generated PDFs
          const pdfFiles = execSync('git status --porcelain | grep -E "\\.pdf$" | sed "s/^...//"', { encoding: 'utf8' }).trim();
          
          if (pdfFiles) {
            const pdfList = pdfFiles.split('\n').map(file => `- \`${file}\``).join('\n');
            
            const comment = `## 🎵 ChordPro PDFs Generated
            
            The following PDF files were generated from your ChordPro changes:
            
            ${pdfList}
            
            Download the generated PDFs from the workflow artifacts below.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
    
    - name: Upload PDFs as artifacts
      if: steps.check-pdfs.outputs.pdfs-generated == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: generated-pdfs-${{ github.run_number }}
        path: |
          **/*.pdf
        retention-days: 30
